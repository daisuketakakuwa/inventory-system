// Code generated by goa v3.7.2, DO NOT EDIT.
//
// inventory HTTP client types
//
// Command:
// $ goa gen inventory-system/api/svc/design

package client

import (
	inventory "inventory-system/gen/inventory"
	inventoryviews "inventory-system/gen/inventory/views"
)

// CreateRequestBody is the type of the "inventory" service "create" endpoint
// HTTP request body.
type CreateRequestBody struct {
	ProductName        string  `form:"productName" json:"productName" xml:"productName"`
	ProductDescription *string `form:"productDescription,omitempty" json:"productDescription,omitempty" xml:"productDescription,omitempty"`
	ProductMinStock    *int32  `form:"productMinStock,omitempty" json:"productMinStock,omitempty" xml:"productMinStock,omitempty"`
}

// UpdateRequestBody is the type of the "inventory" service "update" endpoint
// HTTP request body.
type UpdateRequestBody struct {
	ProductName        *string `form:"productName,omitempty" json:"productName,omitempty" xml:"productName,omitempty"`
	ProductDescription *string `form:"productDescription,omitempty" json:"productDescription,omitempty" xml:"productDescription,omitempty"`
	ProductMinStock    *int32  `form:"productMinStock,omitempty" json:"productMinStock,omitempty" xml:"productMinStock,omitempty"`
}

// FindResponseBody is the type of the "inventory" service "find" endpoint HTTP
// response body.
type FindResponseBody struct {
	ProductID          *int    `form:"productId,omitempty" json:"productId,omitempty" xml:"productId,omitempty"`
	ProductName        *string `form:"productName,omitempty" json:"productName,omitempty" xml:"productName,omitempty"`
	ProductDescription *string `form:"productDescription,omitempty" json:"productDescription,omitempty" xml:"productDescription,omitempty"`
	ProductMinStock    *int32  `form:"productMinStock,omitempty" json:"productMinStock,omitempty" xml:"productMinStock,omitempty"`
}

// NewCreateRequestBody builds the HTTP request body from the payload of the
// "create" endpoint of the "inventory" service.
func NewCreateRequestBody(p *inventory.CreateProductPayload) *CreateRequestBody {
	body := &CreateRequestBody{
		ProductName:        p.ProductName,
		ProductDescription: p.ProductDescription,
		ProductMinStock:    p.ProductMinStock,
	}
	return body
}

// NewUpdateRequestBody builds the HTTP request body from the payload of the
// "update" endpoint of the "inventory" service.
func NewUpdateRequestBody(p *inventory.UpdateProductPayload) *UpdateRequestBody {
	body := &UpdateRequestBody{
		ProductName:        p.ProductName,
		ProductDescription: p.ProductDescription,
		ProductMinStock:    p.ProductMinStock,
	}
	return body
}

// NewFindproductresultViewOK builds a "inventory" service "find" endpoint
// result from a HTTP "OK" response.
func NewFindproductresultViewOK(body *FindResponseBody) *inventoryviews.FindproductresultView {
	v := &inventoryviews.FindproductresultView{
		ProductID:          body.ProductID,
		ProductName:        body.ProductName,
		ProductDescription: body.ProductDescription,
		ProductMinStock:    body.ProductMinStock,
	}

	return v
}
