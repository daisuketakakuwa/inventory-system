// Code generated by goa v3.7.2, DO NOT EDIT.
//
// inventory HTTP server types
//
// Command:
// $ goa gen inventory-system/api/svc/design

package server

import (
	inventory "inventory-system/gen/inventory"
	inventoryviews "inventory-system/gen/inventory/views"

	goa "goa.design/goa/v3/pkg"
)

// CreateRequestBody is the type of the "inventory" service "create" endpoint
// HTTP request body.
type CreateRequestBody struct {
	ProductName        *string `form:"productName,omitempty" json:"productName,omitempty" xml:"productName,omitempty"`
	ProductDescription *string `form:"productDescription,omitempty" json:"productDescription,omitempty" xml:"productDescription,omitempty"`
	ProductMinStock    *int32  `form:"productMinStock,omitempty" json:"productMinStock,omitempty" xml:"productMinStock,omitempty"`
}

// UpdateRequestBody is the type of the "inventory" service "update" endpoint
// HTTP request body.
type UpdateRequestBody struct {
	ProductName        *string `form:"productName,omitempty" json:"productName,omitempty" xml:"productName,omitempty"`
	ProductDescription *string `form:"productDescription,omitempty" json:"productDescription,omitempty" xml:"productDescription,omitempty"`
	ProductMinStock    *int32  `form:"productMinStock,omitempty" json:"productMinStock,omitempty" xml:"productMinStock,omitempty"`
}

// FindResponseBody is the type of the "inventory" service "find" endpoint HTTP
// response body.
type FindResponseBody struct {
	ProductID          *int    `form:"productId,omitempty" json:"productId,omitempty" xml:"productId,omitempty"`
	ProductName        *string `form:"productName,omitempty" json:"productName,omitempty" xml:"productName,omitempty"`
	ProductDescription *string `form:"productDescription,omitempty" json:"productDescription,omitempty" xml:"productDescription,omitempty"`
	ProductMinStock    *int32  `form:"productMinStock,omitempty" json:"productMinStock,omitempty" xml:"productMinStock,omitempty"`
}

// NewFindResponseBody builds the HTTP response body from the result of the
// "find" endpoint of the "inventory" service.
func NewFindResponseBody(res *inventoryviews.FindproductresultView) *FindResponseBody {
	body := &FindResponseBody{
		ProductID:          res.ProductID,
		ProductName:        res.ProductName,
		ProductDescription: res.ProductDescription,
		ProductMinStock:    res.ProductMinStock,
	}
	return body
}

// NewCreateProductPayload builds a inventory service create endpoint payload.
func NewCreateProductPayload(body *CreateRequestBody) *inventory.CreateProductPayload {
	v := &inventory.CreateProductPayload{
		ProductName:        *body.ProductName,
		ProductDescription: body.ProductDescription,
		ProductMinStock:    body.ProductMinStock,
	}

	return v
}

// NewUpdateProductPayload builds a inventory service update endpoint payload.
func NewUpdateProductPayload(body *UpdateRequestBody, productID int) *inventory.UpdateProductPayload {
	v := &inventory.UpdateProductPayload{
		ProductName:        body.ProductName,
		ProductDescription: body.ProductDescription,
		ProductMinStock:    body.ProductMinStock,
	}
	v.ProductID = productID

	return v
}

// NewFindPayload builds a inventory service find endpoint payload.
func NewFindPayload(productID int) *inventory.FindPayload {
	v := &inventory.FindPayload{}
	v.ProductID = productID

	return v
}

// NewDeletePayload builds a inventory service delete endpoint payload.
func NewDeletePayload(productID int) *inventory.DeletePayload {
	v := &inventory.DeletePayload{}
	v.ProductID = productID

	return v
}

// ValidateCreateRequestBody runs the validations defined on CreateRequestBody
func ValidateCreateRequestBody(body *CreateRequestBody) (err error) {
	if body.ProductName == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("productName", "body"))
	}
	return
}
