// Code generated by goa v3.7.2, DO NOT EDIT.
//
// inventory gRPC client types
//
// Command:
// $ goa gen inventory-system/api/svc/design

package client

import (
	inventorypb "inventory-system/gen/grpc/inventory/pb"
	inventory "inventory-system/gen/inventory"
	inventoryviews "inventory-system/gen/inventory/views"
)

// NewProtoCreateRequest builds the gRPC request type from the payload of the
// "create" endpoint of the "inventory" service.
func NewProtoCreateRequest(payload *inventory.CreateProductPayload) *inventorypb.CreateRequest {
	message := &inventorypb.CreateRequest{
		ProductName: payload.ProductName,
	}
	if payload.ProductDescription != nil {
		message.ProductDescription = *payload.ProductDescription
	}
	if payload.ProductMinStock != nil {
		message.ProductMinStock = *payload.ProductMinStock
	}
	return message
}

// NewCreateResult builds the result type of the "create" endpoint of the
// "inventory" service from the gRPC response type.
func NewCreateResult(message *inventorypb.CreateResponse) string {
	result := message.Field
	return result
}

// NewProtoUpdateRequest builds the gRPC request type from the payload of the
// "update" endpoint of the "inventory" service.
func NewProtoUpdateRequest(payload *inventory.UpdateProductPayload) *inventorypb.UpdateRequest {
	message := &inventorypb.UpdateRequest{
		ProductId: int32(payload.ProductID),
	}
	if payload.ProductName != nil {
		message.ProductName = *payload.ProductName
	}
	if payload.ProductDescription != nil {
		message.ProductDescription = *payload.ProductDescription
	}
	if payload.ProductMinStock != nil {
		message.ProductMinStock = *payload.ProductMinStock
	}
	return message
}

// NewUpdateResult builds the result type of the "update" endpoint of the
// "inventory" service from the gRPC response type.
func NewUpdateResult(message *inventorypb.UpdateResponse) string {
	result := message.Field
	return result
}

// NewProtoFindRequest builds the gRPC request type from the payload of the
// "find" endpoint of the "inventory" service.
func NewProtoFindRequest(payload *inventory.FindPayload) *inventorypb.FindRequest {
	message := &inventorypb.FindRequest{
		ProductId: int32(payload.ProductID),
	}
	return message
}

// NewFindResult builds the result type of the "find" endpoint of the
// "inventory" service from the gRPC response type.
func NewFindResult(message *inventorypb.FindResponse) *inventoryviews.FindproductresultView {
	result := &inventoryviews.FindproductresultView{}
	if message.ProductId != 0 {
		productIDptr := int(message.ProductId)
		result.ProductID = &productIDptr
	}
	if message.ProductName != "" {
		result.ProductName = &message.ProductName
	}
	if message.ProductDescription != "" {
		result.ProductDescription = &message.ProductDescription
	}
	if message.ProductMinStock != 0 {
		result.ProductMinStock = &message.ProductMinStock
	}
	return result
}

// NewProtoDeleteRequest builds the gRPC request type from the payload of the
// "delete" endpoint of the "inventory" service.
func NewProtoDeleteRequest(payload *inventory.DeletePayload) *inventorypb.DeleteRequest {
	message := &inventorypb.DeleteRequest{
		ProductId: int32(payload.ProductID),
	}
	return message
}

// NewDeleteResult builds the result type of the "delete" endpoint of the
// "inventory" service from the gRPC response type.
func NewDeleteResult(message *inventorypb.DeleteResponse) string {
	result := message.Field
	return result
}
