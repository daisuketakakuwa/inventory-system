// Code generated by goa v3.7.2, DO NOT EDIT.
//
// inventory gRPC server types
//
// Command:
// $ goa gen inventory-system/api/svc/design

package server

import (
	inventorypb "inventory-system/gen/grpc/inventory/pb"
	inventory "inventory-system/gen/inventory"
	inventoryviews "inventory-system/gen/inventory/views"
)

// NewCreatePayload builds the payload of the "create" endpoint of the
// "inventory" service from the gRPC request type.
func NewCreatePayload(message *inventorypb.CreateRequest) *inventory.CreateProductPayload {
	v := &inventory.CreateProductPayload{
		ProductName: message.ProductName,
	}
	if message.ProductDescription != "" {
		v.ProductDescription = &message.ProductDescription
	}
	if message.ProductMinStock != 0 {
		v.ProductMinStock = &message.ProductMinStock
	}
	return v
}

// NewProtoCreateResponse builds the gRPC response type from the result of the
// "create" endpoint of the "inventory" service.
func NewProtoCreateResponse(result string) *inventorypb.CreateResponse {
	message := &inventorypb.CreateResponse{}
	message.Field = result
	return message
}

// NewUpdatePayload builds the payload of the "update" endpoint of the
// "inventory" service from the gRPC request type.
func NewUpdatePayload(message *inventorypb.UpdateRequest) *inventory.UpdateProductPayload {
	v := &inventory.UpdateProductPayload{
		ProductID: int(message.ProductId),
	}
	if message.ProductName != "" {
		v.ProductName = &message.ProductName
	}
	if message.ProductDescription != "" {
		v.ProductDescription = &message.ProductDescription
	}
	if message.ProductMinStock != 0 {
		v.ProductMinStock = &message.ProductMinStock
	}
	return v
}

// NewProtoUpdateResponse builds the gRPC response type from the result of the
// "update" endpoint of the "inventory" service.
func NewProtoUpdateResponse(result string) *inventorypb.UpdateResponse {
	message := &inventorypb.UpdateResponse{}
	message.Field = result
	return message
}

// NewFindPayload builds the payload of the "find" endpoint of the "inventory"
// service from the gRPC request type.
func NewFindPayload(message *inventorypb.FindRequest) *inventory.FindPayload {
	v := &inventory.FindPayload{
		ProductID: int(message.ProductId),
	}
	return v
}

// NewProtoFindResponse builds the gRPC response type from the result of the
// "find" endpoint of the "inventory" service.
func NewProtoFindResponse(result *inventoryviews.FindproductresultView) *inventorypb.FindResponse {
	message := &inventorypb.FindResponse{}
	if result.ProductID != nil {
		message.ProductId = int32(*result.ProductID)
	}
	if result.ProductName != nil {
		message.ProductName = *result.ProductName
	}
	if result.ProductDescription != nil {
		message.ProductDescription = *result.ProductDescription
	}
	if result.ProductMinStock != nil {
		message.ProductMinStock = *result.ProductMinStock
	}
	return message
}

// NewDeletePayload builds the payload of the "delete" endpoint of the
// "inventory" service from the gRPC request type.
func NewDeletePayload(message *inventorypb.DeleteRequest) *inventory.DeletePayload {
	v := &inventory.DeletePayload{
		ProductID: int(message.ProductId),
	}
	return v
}

// NewProtoDeleteResponse builds the gRPC response type from the result of the
// "delete" endpoint of the "inventory" service.
func NewProtoDeleteResponse(result string) *inventorypb.DeleteResponse {
	message := &inventorypb.DeleteResponse{}
	message.Field = result
	return message
}
