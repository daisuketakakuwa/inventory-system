// Code generated by goa v3.7.2, DO NOT EDIT.
//
// inventory views
//
// Command:
// $ goa gen inventory-system/api/svc/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// Findproductresult is the viewed result type that is projected based on a
// view.
type Findproductresult struct {
	// Type to project
	Projected *FindproductresultView
	// View to render
	View string
}

// FindproductresultView is a type that runs validations on a projected type.
type FindproductresultView struct {
	ProductID          *int
	ProductName        *string
	ProductDescription *string
	ProductMinStock    *int32
}

var (
	// FindproductresultMap is a map indexing the attribute names of
	// Findproductresult by view name.
	FindproductresultMap = map[string][]string{
		"default": {
			"productId",
			"productName",
			"productDescription",
			"productMinStock",
		},
	}
)

// ValidateFindproductresult runs the validations defined on the viewed result
// type Findproductresult.
func ValidateFindproductresult(result *Findproductresult) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateFindproductresultView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateFindproductresultView runs the validations defined on
// FindproductresultView using the "default" view.
func ValidateFindproductresultView(result *FindproductresultView) (err error) {

	return
}
