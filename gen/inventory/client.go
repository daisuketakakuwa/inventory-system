// Code generated by goa v3.7.2, DO NOT EDIT.
//
// inventory client
//
// Command:
// $ goa gen inventory-system/api/svc/design

package inventory

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "inventory" service client.
type Client struct {
	CreateEndpoint goa.Endpoint
	UpdateEndpoint goa.Endpoint
	FindEndpoint   goa.Endpoint
	DeleteEndpoint goa.Endpoint
}

// NewClient initializes a "inventory" service client given the endpoints.
func NewClient(create, update, find, delete_ goa.Endpoint) *Client {
	return &Client{
		CreateEndpoint: create,
		UpdateEndpoint: update,
		FindEndpoint:   find,
		DeleteEndpoint: delete_,
	}
}

// Create calls the "create" endpoint of the "inventory" service.
func (c *Client) Create(ctx context.Context, p *CreateProductPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Update calls the "update" endpoint of the "inventory" service.
func (c *Client) Update(ctx context.Context, p *UpdateProductPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// Find calls the "find" endpoint of the "inventory" service.
func (c *Client) Find(ctx context.Context, p *FindPayload) (res *Findproductresult, err error) {
	var ires interface{}
	ires, err = c.FindEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Findproductresult), nil
}

// Delete calls the "delete" endpoint of the "inventory" service.
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (res string, err error) {
	var ires interface{}
	ires, err = c.DeleteEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
